using System;
using System.Reflection;

namespace Breeze.PocoMetadata
{
    /// <summary>
    /// EntityDescriptor for NorthwindIB data model
    /// </summary>
    public class NorthwindEntityDescriptor : EntityDescriptor
    {
        public override bool Include(Type type)
        {
            if (type.Name.Contains("Context")) return false;
            if (type.Name.Contains("CustomerMetaData")) return false;
            if (type.Name.Contains("CategoryMulti")) return false;
            if (type.Name.Contains("ProductMulti")) return false;
            if (type.Name.Contains("Validator")) return false;
            if (type.Name.Contains("NextId")) return false;
            return true;
        }

        public override string GetAutoGeneratedKeyType(Type type)
        {
            var name = type.Name;
            if (name == "Comment" || name == "OrderDetail" || name == "PreviousEmployee"
                || name == "Region" || name == "Territory" || name == "InternationalOrder")
            {
                return "None";
            }
            return "Identity";
        }

        public override bool IsComplexType(Type type)
        {
            if (type.Name == "Location") return true;
            return false;
        }

        public override bool IsKeyProperty(Type type, PropertyInfo propertyInfo)
        {
            var name = propertyInfo.Name;
            if (name == (type.Name + "ID")) return true;
            if (name.Equals("ID", StringComparison.OrdinalIgnoreCase)) return true;
            if (type.Name == "InternationalOrder")
            {
                if (name == "OrderID") return true;
            }
            if (type.Name == "OrderDetail")
            {
                if (name == "OrderID") return true;
                if (name == "ProductID") return true;
            }
            if (type.Name == "PreviousEmployee")
            {
                if (name == "EmployeeID") return true;
            }
            if (type.Name == "ProductDiscontinued")
            {
                if (name == "ProductID") return true;
            }
            if (type.Name == "Comment")
            {
                if (name == "CreatedOn") return true;
                if (name == "SeqNum") return true;
            }
            return false;
        }

        public override string GetForeignKeyName(Type type, PropertyInfo propertyInfo)
        {
            var name = propertyInfo.Name;
            if (name == "InternationalOrder") return "OrderID";
            if (name == "Manager") return "ReportsToEmployeeID";
            if (name == "Category2") return "CategoryID2";
            return name + "ID";
        }

    }
}
